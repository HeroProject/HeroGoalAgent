use 'util/*.pl' as knowledge.
use 'minidialogs/*.pl' as knowledge.
use 'minidialogs/co_creation/*.pl' as knowledge.
use agent_actions as actionspec.
use 'userModel/initializeUserModel.mod2g' as module.

module agent_init {
	% Set loading flag, initialize move parameters, and initialize robot model.
	if true then insert(waitingForInit,
						start, nextCondition('true'),
						posture('Unknown'), batteryCharge(100),
						availableChitchats([]),
						mathCorrect(0), mathSupportStrategy(none)).
	
	% Initalize pause button
	if bel(pauseButton(PB)) then insert(waitForPause(PB)).

	% Initialize user model.
	if true then initializeUserModel.
	
	% Gather all available chitchat topics and themes
	% minidialog(dagdromen_beroep, [type=chitchat, theme=personalia, topic=beroep]).
	if bel(availableChitchats(Chitchats), findall([Th, To], minidialog(_, [type=chitchat, theme=Th, topic=To]), L), flatten(L, FL), sort(FL, ChitchatsSet))
		then delete(availableChitchats(Chitchats)) + insert(availableChitchats(ChitchatsSet)).
	
	% If first move is a question move, initialize required properties
	if bel(currentMinidialog(Minidialog), currentMove(Move), move(Minidialog, Move, question), getInputModalityOrder(Minidialog, Move, Order), nth0(0, Order, NewModality)) 
		then insert(currentInputModality(NewModality), modalityCounter(0), currentAttempt(1), mcCounter(0)).
	
	% Show a default (empty) page on any connected browser
	if bel(html('',Html)) then renderPage(Html).

}
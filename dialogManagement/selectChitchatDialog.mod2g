use '../util/*.pl' as knowledge.
use '../minidialogs/*.pl' as knowledge.
use '../minidialogs/co_creation/*.pl' as knowledge.
use '../minidialogs/robotstories/*.pl' as knowledge.
use '../minidialogs/hospital/*.pl' as knowledge.
use '../sessions' as knowledge.
use '../userModel/loadInteractantData' as module.
use '../hero_actions' as actionspec.

order=linear.

module selectChitchatDialog(SessionElement, RemainingElements) {

	
	% Select a new minidialog of a topic with depedencies.
	if bel(SessionElement = [topic=Topic],
			minidialog(Minidialog, [type=chitchat, theme=_, topic=Topic]), not(isInDialogHistory(Minidialog, _)),
			dependencies(Minidialog, Dependencies), matchesDepencencies(Dependencies))
		then insert(selectedMinidialog(Minidialog, RemainingElements)).
	
	% Select a new minidialog of a theme with dependencies.
	if bel(SessionElement = [theme=Theme],
			minidialog(Minidialog, [type=chitchat, theme=Theme, topic=_]), not(isInDialogHistory(Minidialog, _)),
			dependencies(Minidialog, Dependencies), matchesDepencencies(Dependencies))
		then insert(selectedMinidialog(Minidialog, RemainingElements)).
	
	% Select a new minidialog of a topic without dependencies.
	if bel(SessionElement = [topic=Topic],
			minidialog(Minidialog, [type=chitchat, theme=_, topic=Topic]), not(isInDialogHistory(Minidialog, _)),
			not(dependencies(Minidialog, _)))
		then insert(selectedMinidialog(Minidialog, RemainingElements)).
	
	% Select a new minidialog of a theme without dependencies.
	if bel(SessionElement = [theme=Theme],
			minidialog(Minidialog, [type=chitchat, theme=Theme, topic=_]), not(isInDialogHistory(Minidialog, _)),
			not(dependencies(Minidialog, _)))
		then insert(selectedMinidialog(Minidialog, RemainingElements)).
	
	% Select a new minidialog of a theme without dependencies.
	if bel(SessionElement = [theme='_chitchat'], findSuitableChitchat(Minidialog))
		then insert(selectedMinidialog(Minidialog, RemainingElements)).
}
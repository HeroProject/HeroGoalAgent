use '../util/*.pl' as knowledge.
use '../minidialogs/*.pl' as knowledge.
use '../minidialogs/co_creation/*.pl' as knowledge.
use '../minidialogs/robotstories/chitchat/*.pl' as knowledge.
use '../minidialogs/robotstories/narrative/*.pl' as knowledge.
use '../minidialogs/robotstories/functional/*.pl' as knowledge.
use '../minidialogs/hospital/*.pl' as knowledge.
use '../sessions' as knowledge.
use '../hero_actions' as actionspec.
use '../util/logging' as module.

module askQuestion(Minidialog, Move) {
	if bel(currentAttempt(CurrentAttempt))
		then {
			% Start listening (with timeout by starting timer) and set waitingForAnswer flag.
			% when events have been completed (and we're not already waiting for an answer).
			% the first attempt has a different default waiting time than the noninitial attempts.
			if bel(currentInputModality(speech), keyListValues(Minidialog, Move, [type, context], [Type, Context]),
					getMaxAnswerTime(Minidialog, Move, speech, Type, CurrentAttempt, MaxAnswerTime), Time is MaxAnswerTime/1000)
				then startListening(Time, Context) + insert(waitingForAnswer).
			
			if bel(currentInputModality(touch), getMaxAnswerTime(Minidialog, Move, touch, _, _, MaxAnswerTime))
				then {
					% Start timer for question move with touch response and set waitingForAnswer flag.
					% when events have been completed (and we're not already waiting for an answer).
					if bel(keyValue(Minidialog, Move, type, yesno))
						then starttimer(Move,MaxAnswerTime,MaxAnswerTime) + insert(waitingForAnswer)
						+ setLedColor(['LeftFootLeds', 'RightFootLeds'], ['red', 'green']).
					% Cycle through multiple choice options, start timer for question move with touch response and set waitingForAnswer flag.
					% when events have been completed (and we're not already waiting for an answer).	
					if bel(keyListValues(Minidialog, Move, [type, options], [Type, Values]), Type \= yesno,
							mcCounter(C), nth0(C, Values, Value), atom_string(Value, String))
						then say(String) + starttimer(Move, MaxAnswerTime, MaxAnswerTime) + insert(waitingForAnswer)
						+ setLedColor(['LeftFootLeds', 'RightFootLeds'], ['red', 'green']).
				}
		}
}
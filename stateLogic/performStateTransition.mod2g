use '../dialogflow' as knowledge.
use '../script' as knowledge.
use '../dialogflow' as actionspec.

module performStateTransition(T, S, C) {
	if true then { 
		% ... clean up (and reset nextCondition to default value 'true') ...
		% reset answers processing flag
		if bel(answerProcessed) then delete(answerProcessed).
		
		% Cleanup: remove state specific parameters (if any).	
		if bel(state(T, S, question), modalityCounter(ModCount), currentInputModality(Modality), currentAttempt(Attempt), mcCounter(Count))
			then delete(modalityCounter(ModCount), currentInputModality(Modality), currentAttempt(Attempt), mcCounter(Count)). 
		
		% Cleanup: Remove current, completed state and reset state tracking parameters to their default values.
		if bel(currentState(S), started)
			then delete(currentState(S), started, nextCondition(C))
				+ insert(start, nextCondition('true')).
	
		% ... and transition to next state (if there is one) ...
		if bel(next(T, S, C, Snext))
			then insert(currentState(Snext)). % Progress: move to next state
			
		% ... or go to next topic if a topic has been completed (no next state has been specified for the topic).
		if goal(topics(AllTopics)), not(bel(next(T, S, C, _)))
		then {
			if bel(topics(TopicsDone), append(TopicsDone, [T], NewTopicsDone))
				then delete(topics(TopicsDone)) + insert(topics(NewTopicsDone)).
			% get new topic (if any is left).
			if bel(topics(TopicsDone), append(TopicsDone, [H | _], AllTopics))
				then delete(currentTopic(T)) + insert(currentTopic(H), currentState(s1)).
		}
				
		% And, finally, initialize state specific parameters for new state (if any).
		if bel(currentTopic(Tnew), currentState(Snew), state(Tnew, Snew, question), keyValue(Tnew, Snew, inputModalityOrder, Order), nth0(0, Order, NewModality)) 
			then insert(currentInputModality(NewModality), modalityCounter(0), currentAttempt(1), mcCounter(0)).
	}
}
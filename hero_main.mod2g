use 'util/*.pl' as knowledge.
use 'topics/*.pl' as knowledge.
use sessions as knowledge.
use hero_actions as actionspec.
use 'stateLogic/performStateActions' as module.
use 'memory/loadUserData' as module.

module hero_main {
	if not(goal(topics([]))), bel(waitingForInitFromMemory, userId(UserId), userModel(UserId, SessionNumber), sessionOrder(SessionOrder), 
		nth1(SessionNumber, SessionOrder, SessionID), session(SessionID, Topics), nth0(0, Topics, FirstTopic, RestOfTopics))
			then delete(waitingForInitFromMemory) + insert(currentTopic(FirstTopic), topics(RestOfTopics), waitingForLoadedUserInput) 
				+ loadUserData(Topics) + adopt(topics([])).
	
	% Doing things
	if bel(currentTopic(T), currentState(S), start, not(waitingForEvent(_)), not(waitingForMemoryEvent(_))) then 
	{
		if bel(not(audio(T, S, recorded, _))) then performStateActions(T, S).
		
		if bel(audio(T, S, recorded, [Tsource, Ssource]), audioRecording(Tsource, Ssource, _))
			then performStateActions(T, S).
	}
}
	
	
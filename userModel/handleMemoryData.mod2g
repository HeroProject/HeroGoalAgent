use '../util/*.pl' as knowledge.
use '../minidialogs/*.pl' as knowledge.
use '../minidialogs/co_creation/*.pl' as knowledge.
use '../minidialogs/hospital/*.pl' as knowledge.
use '../minidialogs/robotstories/*.pl' as knowledge.
use '../sessions' as knowledge.
use '../hero_actions' as actionspec.

module handleMemoryData(Key, Value) {

	if bel(Value \= 'None', Key \= 'DialogHistory', Key \= 'NarrativeHistory', Key \= 'TopicsOfInterest', waitingForMemoryData(Key), userModel(UserModel)) then {
		% import user model data (except led data)
		if bel(not(waitingForMemoryLed(Key)), updateUserModel(Key, Value, UserModel, NewUserModel))
			then delete(userModel(UserModel)) + insert(userModel(NewUserModel)). 
		
		% import user led data
		if bel(waitingForMemoryLed(Key), string_to_nested_list(Value, LedAnim), 
				updateUserModel(Key, LedAnim, UserModel, NewUserModel))
			then delete(userModel(UserModel), waitingForMemoryLed(Key)) + insert(userModel(NewUserModel)).
	}
	
	% import dialog history
	if bel(Value \= 'None', Key = 'DialogHistory', waitingForMemoryData('DialogHistory')) then 
	{
		if bel(dialogHistory(History), term_string(NewHistory, Value))
			then delete(dialogHistory(History)) + insert(dialogHistory(NewHistory)).
		if bel(not(waitingForMemoryData('NarrativeHistory')), not(waitingForMemoryData('TopicsOfInterest')), waitingForHistory)
			then delete(waitingForHistory).
	}
		
	% import narrative history
	if bel(Value \= 'None', Key = 'NarrativeHistory', waitingForMemoryData('NarrativeHistory')) then 
	{
		if bel(narrativeHistory(History))
			then delete(narrativeHistory(History)) + insert(narrativeHistory(Value)).
		if bel(not(waitingForMemoryData('DialogHistory')), not(waitingForMemoryData('TopicsOfInterest')), waitingForHistory)
			then delete(waitingForHistory).
	}
	
	% import topics of interest
	if bel(Value \= 'None', Key = 'TopicsOfInterest', waitingForMemoryData('TopicsOfInterest')) then 
	{
		if bel(topicsOfInterest(Topics), importTopicsOfInterest(Value, ToI))
			then delete(topicsOfInterest(Topics)) + insert(topicsOfInterest(ToI)).
		if bel(not(waitingForMemoryData('DialogHistory')), not(waitingForMemoryData('NarrativeHistory')), waitingForHistory)
			then delete(waitingForHistory).
	}
	
	% release key if not data could be imported
	if bel(waitingForMemoryData(Key)) then delete(waitingForMemoryData(Key)).
}